# # .github/workflows/build.yml
# name: Build and Release

# on:
#   push:
#     tags:
#       - "v*"
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         include:
#           - os: ubuntu-latest
#             name: linux-x64
#             ext: ""
#           - os: macos-latest
#             name: macos-x64
#             ext: ""
#           # - os: windows-latest
#           #   name: windows-x64
#           #   ext: ".exe"

#     steps:
#       - uses: actions/checkout@v4

#       - name: Install dependencies (Linux)
#         if: matrix.os == 'ubuntu-latest'
#         run: sudo apt-get update && sudo apt-get install -y build-essential libncurses5-dev

#       - name: Install dependencies (macOS)
#         if: matrix.os == 'macos-latest'
#         run: brew install ncurses

#       # - name: Install dependencies (Windows)
#       #   if: matrix.os == 'windows-latest'
#       #   shell: bash
#       #   run: |
#       #     git clone https://github.com/wmcbrine/PDCurses.git
#       #     cd PDCurses
#       #     git checkout 5c1cdb51df961e59b4dbd8aeaf57f9571b4f2c46  # Older commit with Makefile.gcc
#       #     cd wincon
#       #     make -f Makefile.gcc WIDE=Y UTF8=Y
#       #     cp pdcurses.a ../../
#       #     cd ../..

#       - name: Build
#         run: |
#           if [ "${{ matrix.os }}" = "windows-latest" ]; then
#             g++ -std=c++11 -O2 -static -o tetris${{ matrix.ext }} tetris.cpp -L. -lpdcurses
#           elif [ "${{ matrix.os }}" = "macos-latest" ]; then
#             g++ -std=c++11 -O2 -o tetris${{ matrix.ext }} tetris.cpp -lncurses
#           else
#             g++ -std=c++11 -O2 -static -o tetris${{ matrix.ext }} tetris.cpp -lncurses
#           fi

#       - name: Upload artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: tetris-${{ matrix.name }}
#           path: tetris${{ matrix.ext }}

#       - name: Upload Release Asset
#         if: startsWith(github.ref, 'refs/tags/')
#         uses: softprops/action-gh-release@v2
#         with:
#           files: tetris${{ matrix.ext }}

name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux-x64
            ext: ""
          - os: macos-latest
            name: macos-x64
            ext: ""

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y build-essential libncurses5-dev

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install ncurses

      - name: Debug ncurses paths (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew info ncurses
          ls /usr/local/opt/ncurses/lib || echo "No /usr/local/opt/ncurses/lib"
          ls /opt/homebrew/opt/ncurses/lib || echo "No /opt/homebrew/opt/ncurses/lib"

      - name: Build
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            g++ -std=c++11 -O2 -o tetris${{ matrix.ext }} tetris.cpp -lncurses
          else
            # Linux
            g++ -std=c++11 -O2 -static -o tetris${{ matrix.ext }} tetris.cpp -lncurses -ltinfo
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tetris-${{ matrix.name }}
          path: tetris${{ matrix.ext }}

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: tetris${{ matrix.ext }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
